name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main  # Adjust this to match the branch you want to trigger the build.
      - dev
  pull_request:
    branches:
      - main
      - dev
permissions:
  contents: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Important for commit history analysis

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Determine and increment version
      id: versioning
      run: |
        if [ -f VERSION ]; then
          echo "VERSION file exists. Reading current version..."
          VERSION=$(cat VERSION)
        else
          echo "VERSION file does not exist. Setting initial version..."
          VERSION="0.0.0"
        fi
        IFS='.' read -ra VERSION_PARTS <<< "$VERSION"
        PATCH=${VERSION_PARTS[2]}
        PATCH=$((PATCH + 1)) # Increment patch version
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH"
        echo "New VERSION: $NEW_VERSION"
        echo "$NEW_VERSION" > VERSION
        echo "::set-output name=new_version::$NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
    - name: Extract repository name
      id: repo_name
      run: |
        REPO_NAME="${GITHUB_REPOSITORY#*/}"
        echo "::set-output name=name::$REPO_NAME"
    - name: Determine tag for the Docker image
      id: docker_tag
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
          # Using echo and file redirection for setting output with new syntax
          echo "tag=dev" >> $GITHUB_OUTPUT
        else
          echo "tag=latest" >> $GITHUB_OUTPUT
        fi
  
    - name: Display Tag Result
      run: echo "The determined tag is ${{ steps.docker_tag.outputs.tag }}"

    - name: Convert repository name to lowercase
      id: lowercase_repo_name
      run: echo "lowercase_repo_name=$(echo '${{ steps.repo_name.outputs.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV


    - name: Build and push the Docker image with lowercase repo name
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.lowercase_repo_name }}:${{ steps.docker_tag.outputs.tag }}

    - name: Build and push the Docker image version
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.lowercase_repo_name }}:${{ steps.versioning.outputs.new_version }}

    - name: Commit VERSION file change
      run: |
        if git diff --exit-code --quiet VERSION; then
          echo "VERSION file has not changed. Skipping commit."
        else
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions"
          git add VERSION
          git commit -m "Update version to ${{ steps.versioning.outputs.new_version }}"
          git push
        fi
